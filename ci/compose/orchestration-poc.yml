x-common-env: &common
  CREWAI_ENDPOINT: "http://crewai:8080"
  CREWAI_API_KEY: "local-test"
  SLACK_WEBHOOK_URL: "http://mock-slack:80"
  N8N_BASIC_AUTH_USER: "admin"
  N8N_BASIC_AUTH_PASSWORD: "admin"

services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:1.26.0
    ports: ["${N8N_PORT:-5678}:5678"]
    restart: unless-stopped
    environment: *common
    # Skip volume mount for CI testing - will bundle workflow in image for production

  crewai:
    image: python:3.12-slim
    ports: ["${CREWAI_PORT:-8080}:8080"]
    restart: unless-stopped
    command: >
      python - <<'PY'
      import json, os, sys
      from http.server import BaseHTTPRequestHandler, HTTPServer
      print("CrewAI server starting up...", file=sys.stderr)
      class H(BaseHTTPRequestHandler):
        def do_POST(self):
          content_len = int(self.headers['content-length'])
          post_body = self.rfile.read(content_len)
          print(f"Received request with content: {post_body}", file=sys.stderr)
          resp={"action":"restart","reason":"PoC stub â€“ always restart","deployment":"api","namespace":"default"}
          print(f"Sending response: {json.dumps(resp)}", file=sys.stderr)
          self.send_response(200); self.send_header("Content-Type","application/json"); self.end_headers()
          self.wfile.write(json.dumps(resp).encode())
      print('Starting HTTP server on port 8080, ready for "action":"restart" tests', file=sys.stderr)
      HTTPServer(("",8080),H).serve_forever()
      PY

  mock-slack:
    image: containous/whoami:latest
    ports: ["${SLACK_PORT:-3010}:80"]