# Production Values for Alfred Helm Chart v3.0.0
# Complete configuration matching docker-compose.prod.yml
# Generated: 2025-05-26

# Global settings
global:
  environment: production
  domain: alfred.example.com
  imageRegistry: ghcr.io/locotoki/alfred-agent-platform-v2
  imagePullPolicy: IfNotPresent
  imageTag: v3.0.0

# Image pull secrets
imagePullSecrets:
  - name: ghcr-pull-secret

# Core Services
alfredCore:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/alfred-core
    tag: v3.0.0
  replicaCount: 3
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    LOG_LEVEL: info
    ENVIRONMENT: production
  secrets:
    - name: openai-api-key
      key: OPENAI_API_KEY
    - name: anthropic-api-key
      key: ANTHROPIC_API_KEY
    - name: slack-token
      key: SLACK_TOKEN
    - name: crewai-api-key
      key: CREWAI_API_KEY
    - name: a2a-auth-token
      key: A2A_AUTH_TOKEN
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    host: api.alfred.example.com
    tls:
      enabled: true
      secretName: alfred-core-tls

# Model Registry
modelRegistry:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/model-registry
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    LOG_LEVEL: info
    ENVIRONMENT: production
  secrets:
    - name: model-registry-db-url
      key: DATABASE_URL

# Model Router
modelRouter:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/model-router
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    LOG_LEVEL: info
    ENVIRONMENT: production
    REGISTRY_URL: http://model-registry:8080

# Database Services
postgresql:
  enabled: true
  auth:
    database: alfred_prod
    username: postgres
    existingSecret: postgres-secret
    secretKeys:
      adminPasswordKey: postgres-password
  primary:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: fast-ssd
    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 1000m
        memory: 1Gi

# Supabase Storage
dbStorage:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/db-storage
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    NODE_ENV: production
  secrets:
    - name: storage-db-url
      key: DATABASE_URL

# Supabase Auth
dbAuth:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/db-auth
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    GOTRUE_LOG_LEVEL: info
  secrets:
    - name: auth-db-url
      key: GOTRUE_DATABASE_URL
    - name: jwt-secret
      key: GOTRUE_JWT_SECRET
    - name: operator-token
      key: GOTRUE_OPERATOR_TOKEN

# Redis
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    existingSecret: redis-secret
    existingSecretPasswordKey: redis-password
  master:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi

# Monitoring Stack
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 50Gi
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    retention: "15d"
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 10Gi

grafana:
  enabled: true
  adminUser: admin
  admin:
    existingSecret: grafana-secret
    userKey: admin-user
    passwordKey: admin-password
  persistence:
    enabled: true
    size: 10Gi
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  ingress:
    enabled: true
    hosts:
      - grafana.alfred.example.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.alfred.example.com

# Slack Services
slackAdapter:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/slack-adapter
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi
  env:
    LOG_LEVEL: info
    ENVIRONMENT: production
  secrets:
    - name: slack-token
      key: SLACK_TOKEN
    - name: slack-app-token
      key: SLACK_APP_TOKEN

slackMcpGateway:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/slack-mcp-gateway
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 3010
  env:
    NODE_ENV: production
  secrets:
    SLACK_BOT_TOKEN: "${SLACK_BOT_TOKEN}"
    SLACK_SIGNING_SECRET: "${SLACK_SIGNING_SECRET}"
    SLACK_APP_TOKEN: "${SLACK_APP_TOKEN}"
    REDIS_PASSWORD: "${REDIS_PASSWORD}"

# Agent Services
agentOrchestrator:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/agent-orchestrator
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    NODE_ENV: production
    LOG_LEVEL: info

socialIntel:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/social-intel
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    LOG_LEVEL: info
    ENVIRONMENT: production
  secrets:
    - name: youtube-api-key
      key: YOUTUBE_API_KEY

# UI Services
uiChat:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/ui-chat
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi
  env:
    ENVIRONMENT: production
  ingress:
    enabled: true
    host: chat.alfred.example.com
    tls:
      enabled: true
      secretName: ui-chat-tls

missionControl:
  enabled: true
  image:
    repository: ghcr.io/locotoki/alfred-agent-platform-v2/mission-control
    tag: v3.0.0
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  env:
    NODE_ENV: production
    NEXT_PUBLIC_API_URL: https://api.alfred.example.com
  ingress:
    enabled: true
    host: mission.alfred.example.com
    tls:
      enabled: true
      secretName: mission-control-tls

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

# Certificate Manager
certManager:
  enabled: true
  email: admin@alfred.example.com
  server: https://acme-v02.api.letsencrypt.org/directory

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Pod Security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  capabilities:
    drop:
    - ALL

# Network Policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress

# Pod Disruption Budgets
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Service Accounts
serviceAccount:
  create: true
  annotations: {}
  automountServiceAccountToken: false

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: 30
  s3:
    bucket: alfred-backups-prod
    region: us-east-1
    endpoint: s3.amazonaws.com
    existingSecret: backup-s3-secret

# Logging
logging:
  enabled: true
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

# Health Checks
healthcheck:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Resource Quotas
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "100"
    requests.memory: "200Gi"
    persistentvolumeclaims: "50"

# Priority Classes
priorityClassName: production-critical
