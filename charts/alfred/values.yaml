# Global settings
global:
  environment: development
  
# Metrics settings
metrics:
  enabled: false  # Set to true in staging/prod
  env:
    DEBUG_MODE: "false"

# DB Metrics service configuration
dbMetrics:
  image:
    repository: db-metrics
    tag: v0.1.0
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    port: 8000
    metricsPort: 9091
  environment:
    DB_USER: postgres
    DB_NAME: postgres

# Slack App configuration
slack:
  enabled: false
  diagnostics:
    enabled: false
    commands:
      health: "/diag health"
      metrics: "/diag metrics"
  prometheus:
    url: "http://prometheus:9090"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Alert Explainer configuration
explainer:
  enabled: false  # Default to false, enabled in Phase 8.2
  image:
    repository: ghcr.io/alfred-platform/explainer-bot
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  env:
    - name: LOG_LEVEL
      value: "INFO"

# Slack MCP Gateway configuration
slackMcpGateway:
  enabled: false
  image:
    repository: ghcr.io/locotoki/slack-mcp-gateway
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000

# Slack App configuration
slackApp:
  enabled: false
  image:
    repository: ghcr.io/locotoki/slack-app
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080