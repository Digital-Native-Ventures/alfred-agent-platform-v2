agentCore:
  image: ghcr.io/locotoki/agent-core:v0.9.6
agentBizdev:
  image: ghcr.io/locotoki/agent-bizdev:edge

hubspotMock:
  enabled: false
  image:
    repository: ghcr.io/locotoki/hubspot-mock
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8095
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

contactIngest:
  enabled: false
  image:
    repository: ghcr.io/locotoki/contact-ingest
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

crmSync:
  enabled: false
  image:
    repository: ghcr.io/locotoki/crm-sync
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

slackAdapter:
  enabled: true
  replicas: 1
  image:
    repository: ghcr.io/locotoki/alfred-slack-adapter
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8000
    metricsPort: 9091
  env:
    ALFRED_LOG_LEVEL: "INFO"
  slack:
    signingSecret: ""  # Set via environment or secrets
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"

slackMcpGateway:
  enabled: false
  image:
    repository: ghcr.io/locotoki/slack-mcp-gateway
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  env:
    LOG_LEVEL: "INFO"
    REDIS_HOST: "redis"
    REDIS_PORT: "6379"
    REDIS_DB: "0"
  config:
    SLACK_APP_ENV: "production"
    MCP_REQUEST_STREAM: "mcp-requests"
    MCP_RESPONSE_STREAM: "mcp-responses"
  secrets:
    SLACK_BOT_TOKEN: ""
    SLACK_APP_TOKEN: ""
    SLACK_SIGNING_SECRET: ""
    REDIS_PASSWORD: ""

slackApp:
  enabled: false
  image:
    repository: ghcr.io/locotoki/slack-app
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  secrets:
    SLACK_BOT_TOKEN: ""
    SLACK_APP_TOKEN: ""
    SLACK_SIGNING_SECRET: ""
  env:
    SOCKET_MODE: "true"
    LOG_LEVEL: "INFO"
  config:
    COMMAND_PREFIX: "!"
    DEFAULT_CHANNEL: "#general"
    ALLOWED_COMMANDS: "help,status,version"

diagnostics-bot:
  enabled: false

explainer-bot:
  enabled: false

prometheus:
  enabled: false
  server:
    configMapOverrideName: ""

grafana:
  enabled: false
  sidecar:
    dashboards:
      enabled: false

global:
  registry: ghcr.io/locotoki

serviceAccount:
  create: false
  name: ""

agentBizops:
  enabled: false
  image:
    repository: ghcr.io/locotoki/agent-bizops
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  env:
    WORKFLOWS_ENABLED: "false"
  metrics:
    enabled: false
    port: 9090

dbMetrics:
  enabled: false
  image:
    repository: ghcr.io/locotoki/db-metrics
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8000
    metricsPort: 9090
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "100m"
  environment:
    DB_NAME: "alfred"
    DB_USER: "postgres"

metrics:
  enabled: false

nameOverride: ""
fullnameOverride: ""

nodeSelector: {}
tolerations: []
affinity: {}
