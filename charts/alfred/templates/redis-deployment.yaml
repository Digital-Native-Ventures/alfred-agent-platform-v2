{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alfred.fullname" . }}-redis
  labels:
    {{- include "alfred.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "alfred.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "alfred.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - containerPort: 6379
          name: redis
        {{- if .Values.redis.auth.enabled }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "alfred.fullname" . }}-redis-secret
              key: password
        command: ["redis-server"]
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
        {{- else }}
        command: ["redis-server"]
        {{- end }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
      volumes:
      - name: redis-data
        {{- if .Values.redis.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "alfred.fullname" . }}-redis-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end }}