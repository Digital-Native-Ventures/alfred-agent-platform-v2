# Alfred Agent Platform v2 - Agent Components
# This file contains only the agent services

x-agent-service-labels: &agent-service-labels
  com.docker.compose.project: "alfred"
  com.docker.compose.group: "agents"

services:
  #############################################################################
  # AGENT SERVICES
  #############################################################################

  # Core Agent Service
  agent-core:
    build:
      context: ./services/alfred-core
      dockerfile: Dockerfile
    image: agent-core:latest
    container_name: agent-core
    ports:
      - "8011:8011"
    environment:
      - ALFRED_ENVIRONMENT=${ALFRED_ENVIRONMENT:-development}
      - ALFRED_DEBUG=${ALFRED_DEBUG:-true}
      - ALFRED_MODE=${ALFRED_MODE:-default}
      - ALFRED_ENABLE_SLACK=${ALFRED_ENABLE_SLACK:-true}
      - ALFRED_DATABASE_URL=${ALFRED_DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-your-super-secret-password}@db-postgres:5432/${DB_NAME:-postgres}}
      - ALFRED_REDIS_URL=redis://redis:6379
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - ALFRED_PROJECT_ID=${ALFRED_PROJECT_ID:-alfred-agent-platform}
      - ALFRED_SLACK_BOT_TOKEN=${ALFRED_SLACK_BOT_TOKEN}
      - ALFRED_SLACK_SIGNING_SECRET=${ALFRED_SLACK_SIGNING_SECRET}
      - ALFRED_OPENAI_API_KEY=${ALFRED_OPENAI_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - redis
      - pubsub-emulator
      - db-postgres
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-core"

  # RAG Service
  agent-rag:
    build:
      context: ./services/rag-service
      dockerfile: Dockerfile
    image: rag-gateway:latest
    container_name: agent-rag
    ports:
      - "8501:8501"
    environment:
      - ALFRED_QDRANT_URL=http://vector-db:6333
      - ALFRED_REDIS_URL=redis://redis:6379/0
      - ALFRED_DEFAULT_COLLECTION=general-knowledge
      - ALFRED_ENABLE_COLLECTIONS=true
      - ALFRED_AUTH_ENABLED=true
      - ALFRED_API_KEYS=atlas:atlas-key,alfred:alfred-key,financial:financial-key,legal:legal-key,social:social-key,crew:crew-key
      - ALFRED_RATE_LIMIT_REQUESTS=100
      - ALFRED_RATE_LIMIT_WINDOW_SECONDS=60
      - ALFRED_LOG_LEVEL=INFO
      - ALFRED_LOG_AGENT_ACCESS=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - vector-db
      - redis
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-rag"

  # Atlas Agent
  agent-atlas:
    image: alpine:latest
    container_name: agent-atlas
    ports:
      - "8000:8000"
    environment:
      - ALFRED_DATABASE_URL=${ALFRED_DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-your-super-secret-password}@db-postgres:5432/${DB_NAME:-postgres}}
      - ALFRED_SUPABASE_URL=http://db-api:3000
      - ALFRED_SUPABASE_KEY=${SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiZXhwIjoxNzQ5NTM2MTMwfQ.EDf3DT0Zl6qQbrLIQLwAXRWAN5kaJ5mvlAh1jm0CY-o}
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - ALFRED_PROJECT_ID=${ALFRED_PROJECT_ID:-alfred-agent-platform}
      - ALFRED_RAG_URL=http://agent-rag:8501
      - ALFRED_RAG_API_KEY=atlas-key
      - ALFRED_RAG_COLLECTION=architecture-knowledge
      - ALFRED_OPENAI_API_KEY=${ALFRED_OPENAI_API_KEY}
      - ALFRED_DAILY_TOKEN_BUDGET=250000
      - ALFRED_GOOGLE_APPLICATION_CREDENTIALS=/tmp/empty-credentials.json
    volumes:
      - /dev/null:/tmp/empty-credentials.json
    command: sh -c 'echo "Atlas Agent Stub Service" && tail -f /dev/null'
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'tail -f /dev/null' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - agent-rag
      - redis
      - pubsub-emulator
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-atlas"

  # Social Intelligence Agent
  agent-social:
    image: alpine:latest
    container_name: agent-social
    ports:
      - "9000:9000"
    environment:
      - ALFRED_ENVIRONMENT=${ALFRED_ENVIRONMENT:-development}
      - ALFRED_DEBUG=${ALFRED_DEBUG:-true}
      - ALFRED_DATABASE_URL=${ALFRED_DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-your-super-secret-password}@db-postgres:5432/${DB_NAME:-postgres}}
      - ALFRED_REDIS_URL=redis://redis:6379
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - ALFRED_PROJECT_ID=${ALFRED_PROJECT_ID:-alfred-agent-platform}
      - ALFRED_OPENAI_API_KEY=${ALFRED_OPENAI_API_KEY}
      - ALFRED_YOUTUBE_API_KEY=${ALFRED_YOUTUBE_API_KEY}
      - ALFRED_SUPABASE_URL=http://db-api:3000
      - ALFRED_SUPABASE_KEY=${SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiZXhwIjoxNzQ5NTM2MTMwfQ.EDf3DT0Zl6qQbrLIQLwAXRWAN5kaJ5mvlAh1jm0CY-o}
      - ALFRED_RAG_URL=http://agent-rag:8501
      - ALFRED_RAG_API_KEY=social-key
      - ALFRED_RAG_COLLECTION=social-knowledge
    command: sh -c 'echo "Social Intelligence Stub Service" && tail -f /dev/null'
    depends_on:
      - db-postgres
      - pubsub-emulator
      - redis
      - agent-rag
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-social"

  # Financial Tax Agent
  agent-financial:
    image: alpine:latest
    container_name: agent-financial
    ports:
      - "9003:9003"
    environment:
      - ALFRED_ENVIRONMENT=${ALFRED_ENVIRONMENT:-development}
      - ALFRED_DEBUG=${ALFRED_DEBUG:-true}
      - ALFRED_DATABASE_URL=${ALFRED_DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-your-super-secret-password}@db-postgres:5432/${DB_NAME:-postgres}}
      - ALFRED_REDIS_URL=redis://redis:6379
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - ALFRED_PROJECT_ID=${ALFRED_PROJECT_ID:-alfred-agent-platform}
      - ALFRED_OPENAI_API_KEY=${ALFRED_OPENAI_API_KEY}
      - ALFRED_SUPABASE_URL=http://db-api:3000
      - ALFRED_SUPABASE_KEY=${SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiZXhwIjoxNzQ5NTM2MTMwfQ.EDf3DT0Zl6qQbrLIQLwAXRWAN5kaJ5mvlAh1jm0CY-o}
      - ALFRED_RAG_URL=http://agent-rag:8501
      - ALFRED_RAG_API_KEY=financial-key
      - ALFRED_RAG_COLLECTION=financial-knowledge
    command: sh -c 'echo "Financial Tax Stub Service" && tail -f /dev/null'
    depends_on:
      - db-postgres
      - pubsub-emulator
      - redis
      - agent-rag
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-financial"

  # Legal Compliance Agent
  agent-legal:
    image: alpine:latest
    container_name: agent-legal
    ports:
      - "9002:9002"
    environment:
      - ALFRED_ENVIRONMENT=${ALFRED_ENVIRONMENT:-development}
      - ALFRED_DEBUG=${ALFRED_DEBUG:-true}
      - ALFRED_DATABASE_URL=${ALFRED_DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-your-super-secret-password}@db-postgres:5432/${DB_NAME:-postgres}}
      - ALFRED_REDIS_URL=redis://redis:6379
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - ALFRED_PROJECT_ID=${ALFRED_PROJECT_ID:-alfred-agent-platform}
      - ALFRED_OPENAI_API_KEY=${ALFRED_OPENAI_API_KEY}
      - ALFRED_SUPABASE_URL=http://db-api:3000
      - ALFRED_SUPABASE_KEY=${SERVICE_ROLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiZXhwIjoxNzQ5NTM2MTMwfQ.EDf3DT0Zl6qQbrLIQLwAXRWAN5kaJ5mvlAh1jm0CY-o}
      - ALFRED_RAG_URL=http://agent-rag:8501
      - ALFRED_RAG_API_KEY=legal-key
      - ALFRED_RAG_COLLECTION=legal-knowledge
    command: sh -c 'echo "Legal Compliance Stub Service" && tail -f /dev/null'
    depends_on:
      - db-postgres
      - pubsub-emulator
      - redis
      - agent-rag
    restart: unless-stopped
    networks:
      - alfred-network
    labels:
      <<: *agent-service-labels
      com.docker.compose.service: "agent-legal"

# Networks
networks:
  alfred-network:
    external: true