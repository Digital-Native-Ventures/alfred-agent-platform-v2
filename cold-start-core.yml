services:
  # PostgreSQL database
  db-postgres:
    image: postgres:15.5-alpine
    container_name: db-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

  # Redis monitoring
  monitoring-redis:
    image: oliver006/redis_exporter:v1.55.0
    container_name: monitoring-redis
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    networks:
      - alfred-network

  # PubSub Emulator
  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    container_name: pubsub-emulator
    ports:
      - "8085:8085"
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

  # Agent Core service
  agent-core:
    image: ghcr.io/locotoki/agent-core:v0.9.6
    container_name: agent-core
    ports:
      - "8011:8011"
    environment:
      - ALFRED_ENVIRONMENT=development
      - ALFRED_DEBUG=true
      - ALFRED_DATABASE_URL=postgresql://postgres:postgres@db-postgres:5432/postgres
      - ALFRED_REDIS_URL=redis://redis:6379
      - ALFRED_PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8011/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      db-postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      pubsub-emulator:
        condition: service_healthy
    networks:
      - alfred-network

  # Bizdev Agent
  agent-bizdev:
    image: ghcr.io/locotoki/agent-bizdev:edge
    container_name: agent-bizdev
    ports:
      - "8012:8012"
    environment:
      - ALFRED_ENVIRONMENT=development
      - ALFRED_DEBUG=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - alfred-network

  # HubSpot Mock
  hubspot-mock:
    image: ghcr.io/locotoki/hubspot-mock:latest
    container_name: hubspot-mock
    ports:
      - "8095:8095"
    environment:
      - PORT=8095
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8095/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - alfred-network

  # Prometheus
  monitoring-db:
    image: prom/prometheus:v2.48.0
    container_name: monitoring-db
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

  # Grafana
  monitoring-dashboard:
    image: grafana/grafana:10.2.2
    container_name: monitoring-dashboard
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - monitoring-db
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

  # Vector DB (Qdrant)
  vector-db:
    image: qdrant/qdrant:v1.7.4
    container_name: vector-db
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alfred-network

networks:
  alfred-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  qdrant_data:
