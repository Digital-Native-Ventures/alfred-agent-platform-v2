# Alfred Agent Platform v2 - Core Infrastructure Only
# This file contains only the core infrastructure services without UI, agents or monitoring

services:
  #############################################################################
  # CORE INFRASTRUCTURE SERVICES
  #############################################################################
  
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - alfred-network

  vector-db:
    image: qdrant/qdrant:v1.7.4
    container_name: vector-db
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - vector-db-data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - alfred-network

  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    container_name: pubsub-emulator
    command: ["gcloud", "beta", "emulators", "pubsub", "start", "--host-port=0.0.0.0:8085", "--project=${ALFRED_PROJECT_ID:-alfred-agent-platform}"]
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/v1/projects/${ALFRED_PROJECT_ID:-alfred-agent-platform}/topics"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - alfred-network

  #############################################################################
  # DATABASE SERVICES (POSTGRES ONLY)
  #############################################################################

  db-postgres:
    image: postgres:15-alpine
    container_name: db-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your-super-secret-password}
      POSTGRES_DB: ${DB_NAME:-postgres}
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
      - ./migrations/supabase:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER:-postgres}", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - alfred-network

# Volumes
volumes:
  redis-data:
    name: redis-data
  vector-db-data:
    name: vector-db-data
  db-postgres-data:
    name: db-postgres-data

# Networks
networks:
  alfred-network:
    name: alfred-network
    driver: bridge