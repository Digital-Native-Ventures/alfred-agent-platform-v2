name: Sync Architecture Guide

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Fetch latest canvas doc (READ)
      - name: Download canvas doc
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -e
          echo "▶ Fetching textdoc…"
          curl -L -H "Authorization: Bearer $OPENAI_API_KEY" \
               -w "\nHTTP_STATUS:%{http_code}\n" \
               https://api.openai.com/v1/canmore/textdocs/685896d9eed481918565b1b29a4351bc \
               -o /tmp/doc.json

          status=$(tail -n1 /tmp/doc.json | sed "s/HTTP_STATUS://")
          if [ "$status" != "200" ]; then
            echo "❌ Got HTTP $status"
            head -n 10 /tmp/doc.json
            exit 1
          fi

          jq -r ".content" /tmp/doc.json > docs/technical-architecture-guide.md

      # Commit back to repo if file changed
      - name: Commit updated guide
        run: |
          git config user.email "bot@alfred"
          git config user.name  "Doc-Sync Bot"
          git add docs/technical-architecture-guide.md
          git diff --cached --quiet || git commit -m "docs: sync architecture guide"
      - uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Push repo → canvas (WRITE) so two-way stays aligned
      - name: Update canvas doc
        if: success()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          DATA=$(jq -Rs . < docs/technical-architecture-guide.md)
          curl -X PUT -H "Authorization: Bearer $OPENAI_API_KEY" \
               -H "Content-Type: application/json" \
               -d "{\"content\":$DATA}" \
               https://api.openai.com/v1/canmore/textdocs/685896d9eed481918565b1b29a4351bc