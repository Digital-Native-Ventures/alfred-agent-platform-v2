name: CI Adapters

on:
  push:
    branches: [main]
    paths:
      - 'alfred/adapters/**'
      - '.github/workflows/ci-adapters.yml'
      - 'tests/adapters/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  pull_request:
    branches: [main]
    paths:
      - 'alfred/adapters/**'
      - '.github/workflows/ci-adapters.yml'
      - 'tests/adapters/**'
      - 'pyproject.toml'
      - 'poetry.lock'

env:
  PYTHON_VERSION: '3.11'

jobs:
  test-adapters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run adapter tests with coverage
        run: |
          poetry run pytest -m adapters -v \
            --cov=alfred.adapters \
            --cov-report=term-missing \
            --cov-report=json:coverage-adapters.json \
            --cov-fail-under=85

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-adapters.json
          flags: adapters
          name: adapters-coverage
          fail_ci_if_error: false
