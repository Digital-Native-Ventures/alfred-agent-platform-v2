name: Observability Audit
on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'   # daily at 04:00 UTC
jobs:
  obs-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          # Create external network if it doesn't exist
          docker network create alfred-network 2>/dev/null || true

          # Create minimal .env file
          cat > .env << EOF
          ALFRED_REGISTRY=ghcr.io/digital-native-ventures
          ALFRED_VERSION=latest
          EOF

      - name: Spin up stack
        run: |
          echo "🚀 Starting observability stack..."
          docker compose -f docker compose.yml -f compose.observability.yaml up -d prometheus grafana

          # Show what's running
          docker compose ps

      - name: Wait for Prometheus & Grafana to be healthy (≤90 s)
        run: |
          echo "⏳ Waiting for services to be ready..."
          for i in {1..18}; do
            echo "Attempt $i/18..."
            if curl -fs http://localhost:9090/-/ready && curl -fs http://localhost:3000/api/health; then
              echo "✅ All services are ready!"
              break
            fi
            if [ $i -eq 18 ]; then
              echo "❌ Services failed to become ready in time"
              docker compose logs prometheus grafana
              exit 1
            fi
            sleep 5
          done

      - name: Probe Prometheus
        run: |
          echo "🔍 Probing Prometheus..."
          curl -Sf http://localhost:9090/-/ready
          echo -e "\n📊 Prometheus targets:"
          curl -s http://localhost:9090/api/v1/targets | jq '.data.activeTargets[] | {job: .labels.job, health: .health}' || true

      - name: Probe Grafana
        run: |
          echo "🔍 Probing Grafana..."
          curl -Sf http://localhost:3000/api/health | jq . || true
          echo -e "\n📊 Grafana datasources:"
          curl -s http://localhost:3000/api/datasources | jq '.[] | {name: .name, type: .type}' || true

      - name: Tear down
        if: always()
        run: |
          echo "🧹 Cleaning up..."
          docker compose -f docker compose.yml -f compose.observability.yaml down -v

      - name: Upload probe logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: observability-probes-${{ github.run_id }}
          path: |
            docker compose.yml
            compose.observability.yaml
          retention-days: 7
