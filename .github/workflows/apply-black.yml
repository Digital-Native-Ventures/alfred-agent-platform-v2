name: Apply Black Formatting

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to format'
        required: true
        default: 'main'
  # Scheduled run weekly
  schedule:
    - cron: '0 3 * * 1'  # 3 AM every Monday

env:
  PYTHON_VERSION: "3.11"
  BLACK_VERSION: "24.4.2"

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install black==${{ env.BLACK_VERSION }}

      - name: Run Black formatter
        run: |
          echo "Running Black formatter version ${{ env.BLACK_VERSION }}..."
          # Use configuration from pyproject.toml
          black .

      - name: Check if there are changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "style: Apply Black formatting to Python files"
          title: "style: Apply Black formatting to Python files"
          body: |
            This PR applies Black formatting to Python files.

            - Applied Black version ${{ env.BLACK_VERSION }}
            - Line length: 100 (from pyproject.toml)
            - Python target version: 3.11

            This is an automated PR created by the 'Apply Black Formatting' GitHub Action.
          branch: style/apply-black-format-${{ github.run_id }}
          base: ${{ github.event.inputs.branch || 'main' }}
          labels: |
            formatting
            automation
            style
