name: Flake Catcher

on:
  pull_request:
    paths:
      - 'services/**'
      - 'tests/e2e/**'
      - 'docker-compose*.yml'

jobs:
  e2e-flake-check:
    name: E2E Flake Check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        attempt: [1, 2, 3]
    steps:
      - uses: actions/checkout@v4
      
      - name: Run E2E tests (attempt ${{ matrix.attempt }})
        id: e2e
        continue-on-error: true
        run: |
          echo "üß™ Running E2E tests - Attempt ${{ matrix.attempt }}/3"
          
          # Start services
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
          
          # Wait for health
          sleep 30
          
          # Run tests
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml \
            run --rm test-runner pytest -v -m e2e
          
          # Capture result
          echo "exit_code=$?" >> $GITHUB_OUTPUT
      
      - name: Cleanup
        if: always()
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.ci.yml down -v
    
  analyze-flakes:
    name: Analyze Flake Results
    needs: e2e-flake-check
    runs-on: ubuntu-latest
    if: cancelled() || failure()
    steps:
      - name: Check flake status
        uses: actions/github-script@v7
        with:
          script: |
            const attempts = ['1', '2', '3'];
            const results = [];
            
            // Collect results from matrix jobs
            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            
            const e2eJobs = jobs.data.jobs.filter(job => 
              job.name.includes('E2E Flake Check')
            );
            
            const failures = e2eJobs.filter(job => 
              job.conclusion === 'failure'
            ).length;
            
            if (failures >= 2) {
              // Add flake label to PR
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['flaky-test']
              });
              
              // Comment on PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `‚ö†Ô∏è **Flaky Test Detected**\n\nE2E tests failed ${failures}/3 times. This indicates test instability.\n\nPlease investigate before merging.`
              });
            } else if (failures === 0) {
              // Remove flake label if all passed
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: 'flaky-test'
                });
              } catch (e) {
                // Label might not exist, that's ok
              }
            }
