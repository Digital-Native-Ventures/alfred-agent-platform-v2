name: Auto-tag releases

on:
  push:
    branches:
      - main

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get latest version from CHANGELOG.md
        id: get-version
        run: |
          # Extract the latest version from CHANGELOG.md
          VERSION=$(grep -oP '## \[\K[^\]]+' CHANGELOG.md | head -1)
          echo "Found version: $VERSION"
          
          # Skip if version is "Unreleased"
          if [ "$VERSION" == "Unreleased" ]; then
            echo "No version to tag, skipping"
            echo "tag_version=" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "tag_version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Check if tag exists
        id: check-tag
        if: steps.get-version.outputs.tag_version != ''
        run: |
          VERSION=${{ steps.get-version.outputs.tag_version }}
          TAG_EXISTS=$(git tag -l "v$VERSION")
          
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag v$VERSION already exists, skipping"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag v$VERSION does not exist"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create tag
        if: steps.get-version.outputs.tag_version != '' && steps.check-tag.outputs.tag_exists == 'false'
        run: |
          VERSION=${{ steps.get-version.outputs.tag_version }}
          
          # Get the commit message from the latest commit
          COMMIT_MSG=$(git log -1 --pretty=%B)
          
          # Create the tag
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag -a "v$VERSION" -m "Release v$VERSION
          
          $COMMIT_MSG"
          
          # Push the tag
          git push origin "v$VERSION"
          
          echo "Created and pushed tag v$VERSION"