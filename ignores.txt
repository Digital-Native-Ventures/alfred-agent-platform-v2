alfred/model/registry/models/models.py:28:class Model(Base):  # type: ignore
alfred/model/registry/models/models.py:56:class ModelEndpoint(Base):  # type: ignore
alfred/model/registry/models/models.py:75:class ModelCapability(Base):  # type: ignore
alfred/model/registry/models/models.py:93:class ModelParameter(Base):  # type: ignore
alfred/model/registry/models/models.py:114:class ModelPerformance(Base):  # type: ignore
alfred/model/registry/models/models.py:132:class ModelUsage(Base):  # type: ignore
alfred/remediation/graphs.py:216:    return workflow.compile(), initial_state  # type: ignore[return-value]
alfred/core/llm_adapter.py:162:                return content  # type: ignore[no-any-return]
alfred/core/llm_adapter.py:273:                return content  # type: ignore[no-any-return]
alfred/alerts/models/alert_group.py:18:class AlertGroup(Base):  # type: ignore
alfred/alerts/models/alert_group.py:40:            self.alert_count += 1  # type: ignore # SQLAlchemy handles column types at runtime
alfred/alerts/models/alert_group.py:41:        self.last_seen = datetime.utcnow()  # type: ignore # SQLAlchemy runtime handles datetime assignment
alfred/slack/tests/test_diagnostics.py:5:import httpx  # type: ignore[import-not-found]
alfred/slack/diagnostics/__main__.py:52:        await handler.start_async()  # type: ignore[no-untyped-call]
alfred/slack/diagnostics/__main__.py:57:        await app.start(port=8080)  # type: ignore[func-returns-value]
